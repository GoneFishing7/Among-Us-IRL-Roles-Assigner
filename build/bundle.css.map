{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Options.svelte",
    "PlayerEditor.svelte",
    "Reveal.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">;\nimport Options from \"./Options.svelte\";\nimport Reveal from \"./Reveal.svelte\";\nlet mode = \"options\";\nlet options = {};\n</script>\n\n<style>\n  :global(html),\n  :global(body) {\n    position: relative;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n  }\n  main {\n    height: 100%;\n  }\n  main :global(*) {\n    color: white;\n\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 32px;\n  }\n  main > :global(button) {\n    background-color: transparent;\n  }\n  :global(input),\n  :global(button) {\n    background: black;\n    border-radius: 5px;\n    border-width: 2px;\n    border-style: solid;\n    border-color: white;\n    cursor: default;\n  }\n  :global(input) {\n    border-width: 4px;\n    border-style: double;\n  }\n  :global(input:focus),\n  :global(button:focus) {\n    outline: none;\n    border-color: blue;\n  }\n  :global(button:hover) {\n    cursor: pointer;\n  }\n</style>\n\n<main>\n  {#if mode === 'options'}\n    <Options\n      initialOptions={{}}\n      on:submit={(event) => {\n        options = event.detail;\n        mode = 'reveal';\n      }} />\n  {:else}\n    <Reveal\n      {options}\n      on:finished={() => {\n        mode = 'options';\n      }} />\n  {/if}\n</main>\n",
    "<script lang=\"ts\">import { createEventDispatcher } from \"svelte\";\n;\nimport PlayerEditor from \"./PlayerEditor.svelte\";\nconst dispatch = createEventDispatcher();\nexport let initialOptions = {\n    gameMode: \"default\",\n    players: [],\n};\nlet options = initialOptions;\nfunction updatePlayers(event) {\n    console.log(event.detail);\n    options.players = event.detail;\n}\nfunction submit() {\n    dispatch(\"submit\", options);\n}\n</script>\n\n<style>\n  div {\n    height: 100%;\n    background-image: url(\"../img/background.jpg\");\n    background-size: 50%;\n    background-repeat: repeat;\n    text-align: center;\n  }\n  div > * {\n    margin-top: 10px;\n  }\n</style>\n\n<div>\n  <PlayerEditor on:updatePlayers={updatePlayers} />\n  <button on:click={submit}>Continue</button>\n</div>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createEventDispatcher, onMount } from \"svelte\";\n;\nconst dispatch = createEventDispatcher();\nlet players = Array(5)\n    .fill({ name: \"Player\" })\n    .map(({ name }, i) => {\n    return { name: name + \" #\" + (i + 1) };\n});\n$: updatePlayers(players);\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    updatePlayers(players);\n}));\nfunction addPlayer() {\n    players =\n        players.length > 20\n            ? players\n            : [...players, { name: `Player #${players.length + 1}` }];\n}\nfunction removePlayer(index) {\n    players =\n        players.length < 4\n            ? players\n            : [...players.slice(0, index), ...players.slice(index + 1)];\n}\nfunction updatePlayers(players) {\n    dispatch(\"updatePlayers\", players);\n}\n</script>\n\n<style>\n  div.row {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  div.col {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  div.col > :global(*) {\n    margin-top: 10px;\n  }\n  button.remove-button {\n    border: none;\n    font-size: 24px;\n  }\n  button.remove-button:focus {\n    outline: auto;\n  }\n  button.add-player-button {\n    width: fit-content;\n    margin: 0 auto;\n  }\n</style>\n\n<div class=\"col\">\n  <button class=\"add-player-button\" on:click={addPlayer}>Add</button>\n  {#each players as { name }, i}\n    <div class=\"row\">\n      <input placeholder={name} type=\"text\" bind:value={name} />\n      <button\n        on:click={() => {\n          removePlayer(i);\n        }}\n        class=\"remove-button\">X</button>\n    </div>\n  {/each}\n</div>\n",
    "<script lang=\"ts\">import { createEventDispatcher } from \"svelte\";\n;\nimport { assignRoles } from \"./rolesAssigner\";\nimport RevealSinglePlayer from \"./RevealSinglePlayer.svelte\";\nexport let options;\n$: optionsWithRoles = assignRoles(options.players, \"default\");\nconst dispatch = createEventDispatcher();\nlet mode = \"revealing\";\nlet currentPlayerRevealing = 0;\n$: if (mode === \"postreveal\") {\n    dispatch(\"finished\");\n}\n</script>\n\n<style>\n  div {\n    height: 100%;\n    background-image: url(\"../img/background.jpg\");\n    background-size: 50%;\n    background-repeat: repeat;\n    text-align: center;\n  }\n  div > * {\n    margin-top: 10px;\n  }\n</style>\n\n<div>\n  {#if mode === 'revealing'}\n    <RevealSinglePlayer\n      name={optionsWithRoles[currentPlayerRevealing].name}\n      role={optionsWithRoles[currentPlayerRevealing].role}\n      on:finished={() => {\n        if (currentPlayerRevealing >= optionsWithRoles.length - 1) {\n          mode = 'postreveal';\n          return;\n        }\n        currentPlayerRevealing++;\n      }} />\n  {:else}\n    <p>Loading...</p>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAQU,IAAI,AAAC,CACL,IAAI,AAAE,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACD,mBAAI,CAAC,AAAQ,CAAC,AAAE,CAAC,AACf,KAAK,CAAE,KAAK,CAEZ,WAAW,CAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CACzC,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,mBAAI,CAAW,MAAM,AAAE,CAAC,AACtB,gBAAgB,CAAE,WAAW,AAC/B,CAAC,AACO,KAAK,AAAC,CACN,MAAM,AAAE,CAAC,AACf,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,KAAK,CACnB,MAAM,CAAE,OAAO,AACjB,CAAC,AACO,KAAK,AAAE,CAAC,AACd,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,MAAM,AACtB,CAAC,AACO,WAAW,AAAC,CACZ,YAAY,AAAE,CAAC,AACrB,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,IAAI,AACpB,CAAC,AACO,YAAY,AAAE,CAAC,AACrB,MAAM,CAAE,OAAO,AACjB,CAAC;AC7BD,GAAG,4BAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,uBAAuB,CAAC,CAC9C,eAAe,CAAE,GAAG,CACpB,iBAAiB,CAAE,MAAM,CACzB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,iBAAG,CAAG,cAAE,CAAC,AACP,UAAU,CAAE,IAAI,AAClB,CAAC;ACWD,GAAG,IAAI,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,GAAG,IAAI,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,GAAG,kBAAI,CAAW,CAAC,AAAE,CAAC,AACpB,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,MAAM,cAAc,cAAC,CAAC,AACpB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,MAAM,4BAAc,MAAM,AAAC,CAAC,AAC1B,OAAO,CAAE,IAAI,AACf,CAAC,AACD,MAAM,kBAAkB,cAAC,CAAC,AACxB,KAAK,CAAE,WAAW,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC;AC/CD,GAAG,4BAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,uBAAuB,CAAC,CAC9C,eAAe,CAAE,GAAG,CACpB,iBAAiB,CAAE,MAAM,CACzB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,iBAAG,CAAG,cAAE,CAAC,AACP,UAAU,CAAE,IAAI,AAClB,CAAC"
}